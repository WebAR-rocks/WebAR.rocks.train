// weights are the weights of the next (down) layer

uniform sampler2D uun_weightsDeltas, uun_inputs;
uniform float uun_toSparsity2, uun_floatMax;

varying vec2 vUV;


const vec4 ONE4 = vec4(1.);
const float PI = 3.14159265359;


vec4 arctanDerivative(vec4 z) {
  vec4 zpi = z * PI;
  return ONE4 / (ONE4 + zpi * zpi);
}


void main(void) {
  vec2 uv = vUV;
  vec4 wd = uun_toSparsity2 * texture2D(uun_weightsDeltas, uv);
  vec4 zSummedInput = texture2D(uun_inputs, uv);

  vec4 delta = wd * arctanDerivative(zSummedInput);
  gl_FragColor = clamp(delta, -uun_floatMax*ONE4, uun_floatMax*ONE4);
} 
