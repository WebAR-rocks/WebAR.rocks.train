// weights are the weights of the next (down) layer
uniform sampler2D uun_weightsDeltas, uun_inputs;
uniform float uun_toSparsity2;

varying vec2 vUV;

const vec4 ONE4 = vec4(1.);

const float ALPHA = 1.6732632423543772848170429916717;
const float LAMBDA = 1.0507009873554804934193349852946;


vec4 seluDerivative(vec4 z) {
  vec4 mixCoeff = step(0., z);
  vec4 negVal = ALPHA * exp(-abs(z));
  return LAMBDA * mix(negVal, ONE4, mixCoeff);
}


void main(void) {
  vec4 wd = uun_toSparsity2 * texture2D(uun_weightsDeltas, vUV);
  vec4 zSummedInput = texture2D(uun_inputs, vUV);

  vec4 delta = wd * seluDerivative(zSummedInput);
  gl_FragColor = delta;
} 
