// weights are the weights of the next (down) layer

uniform sampler2D uun_weightsDeltas, uun_inputs;
uniform float uun_toSparsity2, uun_floatMax;

varying vec2 vUV;

const vec4 ONE4 = vec4(1.);
const vec4 ZERO4 = vec4(0.);
const vec4 HALF4 = vec4(0.5);


vec4 softplusDerivative(vec4 z) {
  float M = log(uun_floatMax);
  vec4 compM = sign(z - M * ONE4);
  return mix(ONE4 / (ONE4 + exp(-z)), ZERO4, HALF4 + compM * 0.5);
}


void main(void) {
  vec4 wd = uun_toSparsity2 * texture2D(uun_weightsDeltas, vUV);
  vec4 zSummedInput = texture2D(uun_inputs, vUV);

  gl_FragColor = wd * softplusDerivative(zSummedInput);
} 
