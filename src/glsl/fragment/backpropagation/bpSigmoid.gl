// weights are the weights of the next (down) layer

uniform sampler2D uun_weightsDeltas, uun_inputs;
uniform float uun_toSparsity2, uun_floatMax;

varying vec2 vUV;

const vec4 ONE4 = vec4(1.);


vec4 sigmoidDerivative(vec4 z) {
  vec4 ez = exp(-z);
  return ez / ((ONE4+ez)*(ONE4+ez));
}


void main(void) {
  vec4 wd = uun_toSparsity2 * texture2D(uun_weightsDeltas, vUV);
  vec4 zSummedInput = texture2D(uun_inputs, vUV);

  vec4 delta = wd * sigmoidDerivative(zSummedInput);
  gl_FragColor = clamp(delta, -uun_floatMax*ONE4, uun_floatMax*ONE4);
} 
