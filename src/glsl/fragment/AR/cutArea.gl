uniform sampler2D uun_source;

uniform vec2 uun_dxy;
uniform float uun_s0, uun_ds;

const vec2 ONE2 = vec2(1.);
const vec2 ZERO2 = vec2(0.);

varying vec2 vUV;


void main(void) {

	vec2 uvn0 = vUV*2. - ONE2; // normalize uv (between -1 and 1)

	vec2 uvn = uvn0 * uun_s0; // scale0, <1
	uvn *= (1. + uun_ds);
	uvn += uun_dxy * uun_s0;

  vec2 uvTransf = 0.5*vec2(uvn + ONE2);
  
  // This should be useless if uun_s0 is chosen properly:
  vec2 isInside = step(ZERO2, uvTransf) * step(uvTransf, ONE2);

  gl_FragColor = isInside.x * isInside.y * texture2D(uun_source, uvTransf);

  //gl_FragColor.a = step(0.5, gl_FragColor.a);
  
  // DEBUG ZONE:
	//gl_FragColor=texture2D(uun_source,vUV);
}  
